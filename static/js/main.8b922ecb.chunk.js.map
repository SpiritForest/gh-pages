{"version":3,"sources":["serviceWorker.js","Components/Search.js","Components/Autocomplete.js","Components/Header.js","Components/Table.js","Components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Search","state","name","handleChange","_ref","value","target","_this","setState","props","handleSearch","classes","this","react_default","a","createElement","Paper_default","elevation","className","paper","InputBase_default","Object","assign","placeholder","search","onChange","InputProps","IconButton_default","aria-label","disabled","Search_default","Divider_default","React","Component","withStyles","theme","display","justifyContent","marginLeft","marginRight","width","minWidth","paddingLeft","height","fontSize","suggestions","key","data","push","label","root","flexGrow","container","position","zIndex","marginTop","spacing","unit","left","right","inputRoot","flexWrap","inputInput","downshift_esm","id","_ref2","getInputProps","getItemProps","getMenuProps","highlightedIndex","inputValue","isOpen","selectedItem","inputProps","ref","other","objectWithoutProperties","Components_Search","objectSpread","inputRef","renderInput","fullWidth","square","deburr","trim","toLowerCase","inputLength","length","count","filter","suggestion","keep","slice","getSuggestions","map","index","itemProps","isHighlighted","isSelected","indexOf","MenuItem_default","selected","component","style","fontWeight","renderSuggestion","item","Header","index_es","variant","color","Autocomplete","CustomTableCell","head","backgroundColor","palette","common","black","white","body","TableCell","tasks","studentsObj","students","student","task","tsk","getListOfTasks","getData","mentorName","keys","includes","studentsName","getStudentName","studentInfo","arr","_loop","i","obj","taskName","_loop2","score","getStudentsInfo","overflowX","table","green","red","gray","pink","yellow","_getData","_getData$studentsName","_getData$studentInfo","Typography_default","Table_default","TableHead_default","TableRow_default","align","TableBody_default","scope","App","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","localStorage","getItem","bind","assertThisInitialized","clear","setItem","padding","Components_Header","Components_Table","console","log","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b922ecb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import IntegrationDownshift from './Other'\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    display: \"flex\",\r\n    justifyContent: 'center',\r\n    marginLeft: 20,\r\n    marginRight: 10,\r\n    width: \"30%\",\r\n    minWidth: 200\r\n  },\r\n  search: {\r\n    paddingLeft: 20,\r\n    width: \"100%\",\r\n    height: \"3rem\",\r\n    fontSize: \"1.3rem\",\r\n  }\r\n});\r\n\r\n\r\nclass Search extends React.Component { \r\n  state = {\r\n    name: '',\r\n  };\r\n\r\n  handleChange = ({target: { value }}) => {\r\n    this.setState({ name: value });\r\n    this.props.handleSearch(value);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Paper elevation={1} className={classes.paper}>\r\n        <InputBase placeholder=\"Enter your name\" className={classes.search} value={this.state.name} onChange={this.handleChange} {...this.props.InputProps}/>\r\n        <IconButton aria-label=\"Search\" disabled={true} >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <Divider />\r\n      </Paper>\r\n      )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Search);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Downshift from 'downshift';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport data from '../node/result-json/result';\r\nimport Search from './Search';\r\nconst suggestions = [];\r\n\r\n(function getMentorsName(){\r\n  for (let key in data) {\r\n    suggestions.push({label: key})\r\n  }\r\n}())\r\n\r\n\r\nfunction renderInput(inputProps) {\r\n  const { InputProps, classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <Search\r\n      InputProps={{\r\n        inputRef: ref,\r\n        ...InputProps,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.label}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400,\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\nrenderSuggestion.propTypes = {\r\n  highlightedIndex: PropTypes.number,\r\n  index: PropTypes.number,\r\n  itemProps: PropTypes.object,\r\n  selectedItem: PropTypes.string,\r\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\r\n};\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: \"100%\",\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  inputRoot: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  inputInput: {\r\n    width: 'auto',\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction IntegrationDownshift(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Downshift id=\"downshift-simple\" onChange={(name)=> {props.handleSearch(name)}}>\r\n        {({\r\n          getInputProps,\r\n          getItemProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          selectedItem,\r\n        }) => (\r\n          <div className={classes.container}>\r\n            {renderInput({\r\n              fullWidth: true,\r\n              classes,\r\n              InputProps: getInputProps({\r\n                placeholder: 'Type your name ',\r\n              }),\r\n            })}\r\n            <div {...getMenuProps()}>\r\n              {isOpen ? (\r\n                <Paper className={classes.paper} square>\r\n                  {getSuggestions(inputValue).map((suggestion, index) =>\r\n                    renderSuggestion({\r\n                      suggestion,\r\n                      index,\r\n                      itemProps: getItemProps({ item: suggestion.label }),\r\n                      highlightedIndex,\r\n                      selectedItem,\r\n                    }),\r\n                  )}\r\n                </Paper>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Downshift>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationDownshift.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationDownshift);\r\n","import React, { Component } from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\">\r\n\t\t\t\t\tMentor-Dashboard\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Autocomplete {...this.props}/>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport data from '../node/result-json/result';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  green: {\r\n      backgroundColor: 'green'\r\n  },\r\n  red: {\r\n      backgroundColor: 'red'\r\n  },\r\n  gray: {\r\n    backgroundColor: 'gray'\r\n  },\r\n  pink: {\r\n    backgroundColor: 'pink'\r\n  },\r\n  yellow: {\r\n    backgroundColor: 'yellow'\r\n  }\r\n});\r\n\r\nfunction getStudentName(mentorName) {\r\n  const students = [];\r\n  for (let key in data[mentorName].students) {\r\n    students.push(key);\r\n  }\r\n  return students; \r\n}\r\n\r\nfunction getListOfTasks() {\r\n  const tasks = [];\r\nfor (let key in data) {\r\n    const studentsObj = data[key].students;\r\n    for (let student in studentsObj) {\r\n        const task = studentsObj[student].tasks;\r\n        for (let tsk in task) {\r\n            tasks.push(tsk);\r\n        }\r\n        break;\r\n    }\r\n    break;\r\n}\r\nreturn tasks;\r\n}\r\n\r\nfunction getStudentsInfo(tasks, mentorName){\r\n  const arr = [];\r\n  for (let i = 0; i < tasks.length; i += 1) {\r\n    const obj = {};\r\n    obj.taskName = tasks[i];\r\n    for (let key in data[mentorName].students) {\r\n      obj[key] = {\r\n        color: data[mentorName].students[key].tasks[tasks[i]].color,\r\n        score: (function(){\r\n          return data[mentorName].students[key].tasks[tasks[i]].score === 'undefined' \r\n          ? \"0\" \r\n          : data[mentorName].students[key].tasks[tasks[i]].score\r\n        }())\r\n      }\r\n    }\r\n    arr.push(obj);\r\n  }\r\nreturn arr;\r\n}\r\n\r\nconst tasks = getListOfTasks();\r\n\r\nconst getData = mentorName => {\r\n  if (!mentorName) {\r\n    return {};\r\n  }\r\n  const keys = Object.keys(data);\r\n  if (!keys.includes(mentorName)) {\r\n    return {};\r\n  }\r\n  const studentsName = getStudentName(mentorName);\r\n  const studentInfo = getStudentsInfo(tasks, mentorName);\r\n\r\n  return {\r\n    studentsName,\r\n    studentInfo\r\n  };\r\n}\r\n\r\nfunction CustomizedTable(props) {\r\n  const { classes, mentorName } = props;\r\n  const { studentsName = [], studentInfo = [] } = getData(mentorName);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"h5\">Current mentor: {mentorName}</Typography>\r\n      <Table className={classes.table}>\r\n      <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Tasks / Students</CustomTableCell>\r\n            {studentsName.map(student => (\r\n              <CustomTableCell key={student.score} align=\"right\">{student}</CustomTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {studentInfo.map(task => (\r\n            <TableRow>\r\n              <CustomTableCell component=\"th\" scope=\"row\">{task.taskName}</CustomTableCell>\r\n              {studentsName.map(name => (\r\n                <CustomTableCell className={classes[task[name].color]} align=\"right\">{task[name].score}</CustomTableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Color definition:</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            <CustomTableCell className={classes.green}>Checked by mentor</CustomTableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <CustomTableCell className={classes.red}>Time for checking is gone and no mark from mentor</CustomTableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <CustomTableCell className={classes.yellow}>Students working on that task now</CustomTableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <CustomTableCell className={classes.pink}>Need to check</CustomTableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <CustomTableCell className={classes.gray}>Task in todo state</CustomTableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Table from './Table';\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    state = {\r\n        name: localStorage.getItem('name') || ''\r\n    }\r\n\r\n    handleSearch(value) { \r\n        localStorage.clear();\r\n        localStorage.setItem('name',value);\r\n        this.setState({name: value});\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.state;\r\n        return (\r\n        <div style={{padding: '0 20px'}}>\r\n            <Header handleSearch={this.handleSearch}/>\r\n            <Table mentorName={name}/>\r\n        </div>\r\n        )\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './Components/App'\r\nimport data from './node/result-json/result';\r\nconsole.log(data);\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}